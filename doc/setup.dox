/*!
@page setup Configuration Guide: Howto Setup your Workstation to Compile JayBeams

@section setup_intro Introduction

These are my notes on how to prepare your environment to build
JayBeams.  If you find a problem with the instructions, please submit
a patch for the instructions so I can fix the problem.

@section fedora Fedora 21 and 22

We assume that you have superuser privileges in your workstation.  The
instructions were originally written for Fedora 21, I will try to make
them more generic over time.  Please submit patches to support other
systems.

Installing the developement tools:

@code
sudo yum install git gcc-c++ clang boost-devel boost autoconf automake autoconf-archive make

# Patch the autoconf library
rpm -q autoconf-archive | grep -q 2016.03.20 && sudo patch -p0 < m4/ax_cxx_compile_stdcxx.m4.patch 

# YAML-CPP (C++ Wrappers for YAML files)
sudo yum install yaml-cpp-devel

# Skye (Small Mocking framework)
wget -q https://github.com/coryan/Skye/releases/download/v0.3/skye-0.3.tar.gz
tar -xf skye-0.3.tar.gz
(cd skye-0.3 && ./configure && make check && sudo make install)
@endcode

@subsection fedora_build Checkout the Code and Build

This is the easy part:

@code
git clone https://github.com/coryan/jaybeams.git
cd jaybeams
./bootstrap
mkdir clang
cd clang
CXX=clang++ CC=clang ../configure
# Just compile the code
make
# Compile the code, the tests and run the tests
make check
#
@endcode

@section ubuntu_xenial Ubuntu 16.04 (Xenial Xenus LTS)

@code
# Install the tools, compilers, etc.
sudo apt-get install automake g++ gcc libfftw3-dev libyaml-cpp-dev libboost-all-dev autoconf-archive git make

# Skye (Small Mocking framework)
wget -q https://github.com/coryan/Skye/releases/download/v0.3/skye-0.3.tar.gz
tar -xf skye-0.3.tar.gz
(cd skye-0.3 && CXX=g++ CC=gcc CPPFLAGS=-D_GLIBCXX_USE_CXX11_ABI=1 ./configure --with-boost-libdir=/usr/lib/x86_64-linux-gnu && make check && sudo make install)
@endcode

@subsection ubuntu_xenial_build

This should be the easy part:

@code
git clone https://github.com/coryan/jaybeams.git
cd jaybeams
./bootstrap
mkdir gcc && cd gcc
CXX=g++ CC=gcc CPPFLAGS=-D_GLIBCXX_USE_CXX11_ABI=1 ../configure  --with-boost-libdir=/usr/lib/x86_64-linux-gnu
make -j 4 check
@endcode

If you want to use FFTW3 to run time delay analysis use:

@code
CXX=g++ CC=gcc CPPFLAGS=-D_GLIBCXX_USE_CXX11_ABI=1 ../configure  --with-boost-libdir=/usr/lib/x86_64-linux-gnu --enable-fftw3
make -j 4 check
@endcode

*/
